<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.2.xsd">
    <changeSet author="pwhitehead" id="tag_cs_007_1">
        <tagDatabase tag="cs_007_1"/>
    </changeSet>
    <changeSet author="pwhitehead" id="cs_007_1">
        <comment>Create claim_status_history table</comment>
        <createTable schemaName="carers" tableName="claim_status_history">
            <column name="transid" type="varchar(11)"/>
            <column name="old_status" type="int"/>
            <column name="new_status" type="int"/>
            <column name="timestamp" type="timestamp"/>
        </createTable>
        <addNotNullConstraint schemaName="carers" tableName="claim_status_history" columnName="transid"/>
        <addPrimaryKey schemaName="carers" tableName="claim_status_history" columnNames="transid, timestamp"/>
        <sql>
            GRANT SELECT,INSERT,UPDATE ON carers.claim_status_history to carersserviceuser;
        </sql>
        <rollback>
            <dropTable schemaName="carers" tableName="claim_status_history"/>
        </rollback>
    </changeSet>
    <changeSet author="pwhitehead" id="cs_007_2">
        <comment>Create update_claim_status_history procedure</comment>
        <createProcedure procedureName="update_claim_status_history">
            CREATE OR REPLACE FUNCTION update_claim_status_history() RETURNS TRIGGER AS $BODY$
            BEGIN
                IF TG_OP = 'INSERT' AND new.key = 'status' THEN
                    INSERT INTO carers.claim_status_history VALUES (new.transid,null,new.value,now());
                ELSIF TG_OP = 'DELETE' AND old.key = 'status' THEN
                    INSERT INTO carers.claim_status_history VALUES (old.transid,old.value,null,now());
                ELSIF TG_OP = 'UPDATE' AND new.key = 'status' THEN
                    INSERT INTO carers.claim_status_history VALUES (new.transid,old.value,new.value,now());
                END IF;
                RETURN NEW;
            END;
            $BODY$ LANGUAGE plpgsql;
        </createProcedure>
        <rollback>
            DROP FUNCTION if exists update_claim_status_history();
        </rollback>
    </changeSet>
    <changeSet author="pwhitehead" id="cs_007_3">
        <comment>Add iud trigger to carers.claim</comment>
        <createProcedure>
            CREATE TRIGGER update_history AFTER insert or update or delete on carers.claimsummary
            FOR EACH ROW EXECUTE PROCEDURE update_claim_status_history();
        </createProcedure>
        <rollback>
            DROP TRIGGER if exists update_history on carers.claimsummary;
        </rollback>
    </changeSet>
</databaseChangeLog>


